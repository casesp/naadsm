--    This SQL DDL script was generated by Microsoft Visual Studio (Release Date: LOCAL BUILD).

--    Driver Used : Microsoft Visual Studio - Microsoft Access Driver.
--    Document    : C:\Users\areeves\Documents\NAADSM\NAADSMDatabaseSchemas\DBSchema3_3_0_GOLD.vsd.
--    Time Created: August 02, 2013 11:54 PM.
--    Operation   : From Visio Update Database Wizard.
--    Connected data source : NAADSM 3.3.x
--    Connected server      : ACCESS
--    Connected database    : C:\Users\areeves\Documents\NAADSM\NAADSMDatabaseSchemas\naadsm-3_3_x.mdb



-- Update existing table `inGeneral`.
create table `inGeneral_IM0` ( 
	`inGeneralID` VARCHAR(10),
	`language` CHAR(2),
	`scenarioDescr` LONGTEXT,
	`iterations` INTEGER,
	`days` INTEGER,
	`simStopReason` VARCHAR(25),
	`includeContactSpread` BIT,
	`includeAirborneSpread` BIT,
	`useAirborneExponentialDecay` BIT,
	`useWithinHerdPrevalence` BIT,
	`costTrackDestruction` BIT,
	`costTrackVaccination` BIT,
	`costTrackZoneSurveillance` BIT,
	`useFixedRandomSeed` BIT,
	`randomSeed` INTEGER,
	`saveAllDailyOutputs` BIT,
	`saveDailyOutputsForIterations` INTEGER,
	`writeDailyStatesFile` BIT,
	`dailyStatesFileName` VARCHAR(255),
	`saveDailyEvents` BIT,
	`saveDailyExposures` BIT,
	`saveIterationOutputsForHerds` BIT,
	`useCustomOutputs` BIT,
	`writeNAADSMapOutput` BIT,
	`NAADSMapDirectory` VARCHAR(255)); 

insert into `inGeneral_IM0` (`inGeneralID`, `language`, `scenarioDescr`, `iterations`, `days`, `simStopReason`, `includeContactSpread`, `includeAirborneSpread`, `useAirborneExponentialDecay`, `useWithinHerdPrevalence`, `costTrackDestruction`, `costTrackVaccination`, `costTrackZoneSurveillance`, `useFixedRandomSeed`, `randomSeed`, `saveAllDailyOutputs`, `saveDailyOutputsForIterations`, `writeDailyStatesFile`, `dailyStatesFileName`, `saveDailyEvents`, `saveDailyExposures`, `saveIterationOutputsForHerds`, `useCustomOutputs`, `writeNAADSMapOutput`, `NAADSMapDirectory`) 
    select `inGeneral`.`inGeneralID`, 
           `inGeneral`.`language`, 
           `inGeneral`.`scenarioDescr`, 
           `inGeneral`.`iterations`, 
           `inGeneral`.`days`, 
           `inGeneral`.`simStopReason`, 
           `inGeneral`.`includeContactSpread`, 
           `inGeneral`.`includeAirborneSpread`, 
           `inGeneral`.`useAirborneExponentialDecay`, 
           `inGeneral`.`useWithinHerdPrevalence`, 
           `inGeneral`.`costTrackDestruction`, 
           `inGeneral`.`costTrackVaccination`, 
           `inGeneral`.`costTrackZoneSurveillance`, 
           `inGeneral`.`useFixedRandomSeed`, 
           `inGeneral`.`randomSeed`, 
           `inGeneral`.`saveAllDailyOutputs`, 
           `inGeneral`.`saveDailyOutputsForIterations`, 
           `inGeneral`.`writeDailyStatesFile`, 
           `inGeneral`.`dailyStatesFileName`, 
           `inGeneral`.`saveDailyEvents`, 
           `inGeneral`.`saveDailyExposures`, 
           `inGeneral`.`saveIterationOutputsForHerds`, 
           `inGeneral`.`useCustomOutputs`, 
           `inGeneral`.`writeNAADSMapOutput`, 
           `inGeneral`.`NAADSMapDirectory`  
    from `inGeneral`;


drop table `inGeneral`; 


-- `inGeneral` : Table of inGeneral
-- 	`inGeneralID` : A primary key for the single record stored in this table.  This value is always "NAADSMXXXX".
-- 	`language` : language is of inGeneral
-- 	`scenarioDescr` : The description of the scenario.
-- 	`iterations` : The number of iterations of this scenario that should be run.
-- 	`days` : The number of days that iterations of this scenario should run, if the command Run->Start and run until specified day... is used.
-- 	`simStopReason` : The criterion used to end each iteration.  This may be that the specified number of days has passed, the first detection has occurred, or the outbreak has ended.
-- 	`includeContactSpread` : Indicates whether disease spread by direct or indirect contact is used in the scenario.
-- 	`includeAirborneSpread` : Indicates whether airborne spread is used in the model.
-- 	`useAirborneExponentialDecay` : Indicates whether exponential decay (TRUE) or linear decay (FALSE) is used with airborne spread.
-- 	`useWithinHerdPrevalence` : useWithinHerdPrevalence is of inGeneral
-- 	`costTrackDestruction` : costTrackDestruction is of inGeneral
-- 	`costTrackVaccination` : costTrackVaccination is of inGeneral
-- 	`costTrackZoneSurveillance` : costTrackZoneSurveillance is of inGeneral
-- 	`useFixedRandomSeed` : Indicates whether a specified seed value for the random number generator should be used.
-- 	`randomSeed` : The specified seed value for the random number generator.
-- 	`saveAllDailyOutputs` : Indicates whether daily outputs should be stored for every iteration.
-- 	`saveDailyOutputsForIterations` : The number of iterations for which daily outputs should be stored.  The minimum value is 3.
-- 	`writeDailyStatesFile` : Indicates whether a plain text file with the state of each unit on each day of each iteration should be written.
-- 	`dailyStatesFileName` : The file name of the plain text file described above.
-- 	`saveDailyEvents` : Indicates whether all events should be recorded in the scenario database.
-- 	`saveDailyExposures` : Indicates whether all exposures should be recorded in the scenario database.
-- 	`useCustomOutputs` : Indicates whether custom outputs should be generated.
-- 	`writeNAADSMapOutput` : writeNAADSMapOutput is of inGeneral
-- 	`NAADSMapDirectory` : NAADSMapDirectory is of inGeneral
-- 	`initInfectedRandomize` : Indicates whether initially infected units are selected at random or specified by the user
-- 	`initInfectedSelectedProdTypes` : initInfectedSelectedProdTypes is of inGeneral
-- 	`initInfectedProdTypes` : initInfectedProdTypes is of inGeneral
-- 	`initInfectedStateNumbers` : initInfectedStateNumbers is of inGeneral
-- 	`initInfectedUseRange` : initInfectedUseRange is of inGeneral
-- 	`initInfectedLatNW` : initInfectedLatNW is of inGeneral
-- 	`initInfectedLonNW` : initInfectedLonNW is of inGeneral
-- 	`initInfectedLatSE` : initInfectedLatSE is of inGeneral
-- 	`initInfectedLonSE` : initInfectedLonSE is of inGeneral  
create table `inGeneral` ( 
	`inGeneralID` VARCHAR(10),
	`language` CHAR(2),
	`scenarioDescr` LONGTEXT,
	`iterations` INTEGER,
	`days` INTEGER,
	`simStopReason` VARCHAR(25),
	`includeContactSpread` BIT,
	`includeAirborneSpread` BIT,
	`useAirborneExponentialDecay` BIT,
	`useWithinHerdPrevalence` BIT,
	`costTrackDestruction` BIT,
	`costTrackVaccination` BIT,
	`costTrackZoneSurveillance` BIT,
	`useFixedRandomSeed` BIT,
	`randomSeed` INTEGER,
	`saveAllDailyOutputs` BIT,
	`saveDailyOutputsForIterations` INTEGER,
	`writeDailyStatesFile` BIT,
	`dailyStatesFileName` VARCHAR(255),
	`saveDailyEvents` BIT,
	`saveDailyExposures` BIT,
	`saveIterationOutputsForHerds` BIT,
	`useCustomOutputs` BIT,
	`writeNAADSMapOutput` BIT,
	`NAADSMapDirectory` VARCHAR(255),
	`initInfectedRandomize` BIT,
	`initInfectedSelectedProdTypes` BIT,
	`initInfectedProdTypes` VARCHAR(255),
	`initInfectedStateNumbers` VARCHAR(255),
	`initInfectedUseRange` BIT,
	`initInfectedLatNW` DOUBLE,
	`initInfectedLonNW` DOUBLE,
	`initInfectedLatSE` DOUBLE,
	`initInfectedLonSE` DOUBLE); 

insert into `inGeneral` (`inGeneralID`, `language`, `scenarioDescr`, `iterations`, `days`, `simStopReason`, `includeContactSpread`, `includeAirborneSpread`, `useAirborneExponentialDecay`, `useWithinHerdPrevalence`, `costTrackDestruction`, `costTrackVaccination`, `costTrackZoneSurveillance`, `useFixedRandomSeed`, `randomSeed`, `saveAllDailyOutputs`, `saveDailyOutputsForIterations`, `writeDailyStatesFile`, `dailyStatesFileName`, `saveDailyEvents`, `saveDailyExposures`, `saveIterationOutputsForHerds`, `useCustomOutputs`, `writeNAADSMapOutput`, `NAADSMapDirectory`) 
    select `inGeneral_IM0`.`inGeneralID`, 
           `inGeneral_IM0`.`language`, 
           `inGeneral_IM0`.`scenarioDescr`, 
           `inGeneral_IM0`.`iterations`, 
           `inGeneral_IM0`.`days`, 
           `inGeneral_IM0`.`simStopReason`, 
           `inGeneral_IM0`.`includeContactSpread`, 
           `inGeneral_IM0`.`includeAirborneSpread`, 
           `inGeneral_IM0`.`useAirborneExponentialDecay`, 
           `inGeneral_IM0`.`useWithinHerdPrevalence`, 
           `inGeneral_IM0`.`costTrackDestruction`, 
           `inGeneral_IM0`.`costTrackVaccination`, 
           `inGeneral_IM0`.`costTrackZoneSurveillance`, 
           `inGeneral_IM0`.`useFixedRandomSeed`, 
           `inGeneral_IM0`.`randomSeed`, 
           `inGeneral_IM0`.`saveAllDailyOutputs`, 
           `inGeneral_IM0`.`saveDailyOutputsForIterations`, 
           `inGeneral_IM0`.`writeDailyStatesFile`, 
           `inGeneral_IM0`.`dailyStatesFileName`, 
           `inGeneral_IM0`.`saveDailyEvents`, 
           `inGeneral_IM0`.`saveDailyExposures`, 
           `inGeneral_IM0`.`saveIterationOutputsForHerds`, 
           `inGeneral_IM0`.`useCustomOutputs`, 
           `inGeneral_IM0`.`writeNAADSMapOutput`, 
           `inGeneral_IM0`.`NAADSMapDirectory`  
    from `inGeneral_IM0`;


drop table `inGeneral_IM0`; 


alter table `inGeneral`
	add constraint `inGeneral_PK` primary key (`inGeneralID`) ; 


create index `inGeneralID` on `inGeneral` (
	`inGeneralID` ASC); 



-- This is the end of the Microsoft Visual Studio generated SQL DDL script.
