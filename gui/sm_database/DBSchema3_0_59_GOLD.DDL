--    This script has been modified by hand from several scripts generated by 
--    Microsoft Visual Studio (Release Date: LOCAL BUILD).

--    Driver Used  : Microsoft Visual Studio - Microsoft Access Driver.
--    Time Modified: July 12, 2005 1:42 PM.

alter table `inHerd`
	drop constraint `inProductionType_dynHerd_FK1`;

alter table `inHerd` drop constraint `dynHerd_PK`; 

drop table `outHerd`; 

create table `dynHerd` ( 
	`herdID` COUNTER,
	`productionTypeID` INTEGER,
	`latitude` DOUBLE,
	`longitude` DOUBLE,
	`initialStateCode` CHAR(1),
	`initialSize` INTEGER,
	`finalStateCode` CHAR(1),
	`finalApparentStateCode` CHAR(1),
	`cumInfected` INTEGER,
	`cumDestroyed` INTEGER,
	`cumVaccinated` INTEGER); 

insert into `dynHerd` (`herdID`, `productionTypeID`, `latitude`, `longitude`, `initialStateCode`, `initialSize`) 
    select `inHerd`.`herdID`,
           `inHerd`.`productionTypeID`, 
           `inHerd`.`latitude`, 
           `inHerd`.`longitude`, 
           `inHerd`.`initialStateCode`, 
           `inHerd`.`initialSize`  
    from `inHerd`;

drop table `inHerd`; 

create table `outGeneral_IM0` ( 
	`outGeneralID` CHAR(10),
	`simulationStartTime` DATETIME,
	`simulationEndTime` DATETIME,
	`completedIterations` INTEGER); 

insert into `outGeneral_IM0` (`outGeneralID`, `simulationStartTime`, `simulationEndTime`, `completedIterations`) 
    select `outGeneral`.`outGeneralID`, 
           `outGeneral`.`simulationStartTime`, 
           `outGeneral`.`simulationEndTime`, 
           `outGeneral`.`completedIterations`  
    from `outGeneral`;

drop table `outGeneral`; 
 
create table `outGeneral` ( 
	`outGeneralID` CHAR(10),
	`simulationStartTime` DATETIME,
	`simulationEndTime` DATETIME,
	`completedIterations` INTEGER,
	`version` VARCHAR(50)); 

insert into `outGeneral` (`outGeneralID`, `simulationStartTime`, `simulationEndTime`, `completedIterations`) 
    select `outGeneral_IM0`.`outGeneralID`, 
           `outGeneral_IM0`.`simulationStartTime`, 
           `outGeneral_IM0`.`simulationEndTime`, 
           `outGeneral_IM0`.`completedIterations`  
    from `outGeneral_IM0`;

drop table `outGeneral_IM0`; 

alter table `outGeneral`
	add constraint `outGeneral_PK` primary key (`outGeneralID`) ; 

alter table `dynHerd`
	add constraint `dynHerd_PK` primary key (`herdID`) ; 

alter table `dynHerd`
	add constraint `inProductionType_dynHerd_FK1` foreign key (
		`productionTypeID`)
	 references `inProductionType` (
		`productionTypeID`); 
 
alter table `outDailyByProductionType`
	drop constraint `inProductionType_outDailyByProductionType_FK1`;

drop table `outDailyByProductionType`; 

create table `outDailyByProductionType` ( 
	`outDailyByPTID` COUNTER,
	`iteration` INTEGER,
	`day` INTEGER,
	`productionTypeID` INTEGER,
	`tsdUSusc` INTEGER,
	`tsdASusc` INTEGER,
	`tsdULat` INTEGER,
	`tsdALat` INTEGER,
	`tsdUSubc` INTEGER,
	`tsdASubc` INTEGER,
	`tsdUClin` INTEGER,
	`tsdAClin` INTEGER,
	`tsdUNImm` INTEGER,
	`tsdANImm` INTEGER,
	`tsdUVImm` INTEGER,
	`tsdAVImm` INTEGER,
	`tsdUDest` INTEGER,
	`tsdADest` INTEGER,
	`tscUSusc` INTEGER,
	`tscASusc` INTEGER,
	`tscULat` INTEGER,
	`tscALat` INTEGER,
	`tscUSubc` INTEGER,
	`tscASubc` INTEGER,
	`tscUClin` INTEGER,
	`tscAClin` INTEGER,
	`tscUNImm` INTEGER,
	`tscANImm` INTEGER,
	`tscUVImm` INTEGER,
	`tscAVImm` INTEGER,
	`tscUDest` INTEGER,
	`tscADest` INTEGER,
	`infnUAir` INTEGER,
	`infnAAir` INTEGER,
	`infnUDir` INTEGER,
	`infnADir` INTEGER,
	`infnUInd` INTEGER,
	`infnAInd` INTEGER,
	`infcUIni` INTEGER,
	`infcAIni` INTEGER,
	`infcUAir` INTEGER,
	`infcAAir` INTEGER,
	`infcUDir` INTEGER,
	`infcADir` INTEGER,
	`infcUInd` INTEGER,
	`infcAInd` INTEGER,
	`expcUDir` INTEGER,
	`expcADir` INTEGER,
	`expcUInd` INTEGER,
	`expcAInd` INTEGER,
	`trcUDir` INTEGER,
	`trcADir` INTEGER,
	`trcUInd` INTEGER,
	`trcAInd` INTEGER,
	`trcUDirp` INTEGER,
	`trcADirp` INTEGER,
	`trcUIndp` INTEGER,
	`trcAIndp` INTEGER,
	`detnUClin` INTEGER,
	`detnAClin` INTEGER,
	`detcUClin` INTEGER,
	`detcAClin` INTEGER,
	`descUDet` INTEGER,
	`descADet` INTEGER,
	`descUDir` INTEGER,
	`descADir` INTEGER,
	`descUInd` INTEGER,
	`descAInd` INTEGER,
	`descURing` INTEGER,
	`descARing` INTEGER,
	`vaccURing` INTEGER,
	`vaccARing` INTEGER, constraint `outDailyEpiByProductionType_PK` primary key (`outDailyByPTID`) ); 

create table `outIterationByProductionType` ( 
	`outIterationByPTID` COUNTER,
	`iteration` INTEGER,
	`productionTypeID` INTEGER,
	`tscUSusc` INTEGER,
	`tscASusc` INTEGER,
	`tscULat` INTEGER,
	`tscALat` INTEGER,
	`tscUSubc` INTEGER,
	`tscASubc` INTEGER,
	`tscUClin` INTEGER,
	`tscAClin` INTEGER,
	`tscUNImm` INTEGER,
	`tscANImm` INTEGER,
	`tscUVImm` INTEGER,
	`tscAVImm` INTEGER,
	`tscUDest` INTEGER,
	`tscADest` INTEGER,
	`infcUIni` INTEGER,
	`infcAIni` INTEGER,
	`infcUAir` INTEGER,
	`infcAAir` INTEGER,
	`infcUDir` INTEGER,
	`infcADir` INTEGER,
	`infcUInd` INTEGER,
	`infcAInd` INTEGER,
	`expcUDir` INTEGER,
	`expcADir` INTEGER,
	`expcUInd` INTEGER,
	`expcAInd` INTEGER,
	`trcUDir` INTEGER,
	`trcADir` INTEGER,
	`trcUInd` INTEGER,
	`trcAInd` INTEGER,
	`trcUDirp` INTEGER,
	`trcADirp` INTEGER,
	`trcUIndp` INTEGER,
	`trcAIndp` INTEGER,
	`detcUClin` INTEGER,
	`detcAClin` INTEGER,
	`descUDet` INTEGER,
	`descADet` INTEGER,
	`descUDir` INTEGER,
	`descADir` INTEGER,
	`descUInd` INTEGER,
	`descAInd` INTEGER,
	`descURing` INTEGER,
	`descARing` INTEGER,
	`vaccURing` INTEGER,
	`vaccARing` INTEGER, constraint `outDailyEpiByProductionType_PK` primary key (`outIterationByPTID`) ); 

alter table `outDailyByProductionType`
	add constraint `inProductionType_outDailyByProductionType_FK1` foreign key (
		`productionTypeID`)
	 references `inProductionType` (
		`productionTypeID`); 

alter table `outIterationByProductionType`
	add constraint `inProductionType_outIterationByProductionType_FK1` foreign key (
		`productionTypeID`)
	 references `inProductionType` (
		`productionTypeID`); 

