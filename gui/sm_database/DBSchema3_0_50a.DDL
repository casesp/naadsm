--    This SQL DDL script was generated by Microsoft Visual Studio (Release Date: LOCAL BUILD).

--    Driver Used : Microsoft Visual Studio - Microsoft Access Driver.
--    Document    : E:\SpreadModel\_Databases\DBSchema3_0_50.vsd.
--    Time Created: June 17, 2005 6:54 PM.
--    Operation   : From Visio Generate Wizard.
--    Connected data source : No connection.
--    Connected server      : No connection.
--    Connected database    : Not applicable.



-- Create  database.
--    Access database file name : 


-- Create new table `inControlsGlobal`.
-- `inControlsGlobal` : Table of inControlsGlobal
-- 	`controlsGlobalID` : controlsGlobalID identifies inControlsGlobal
-- 	`includeDetection` : includeDetection is of inControlsGlobal
-- 	`includeDestruction` : includeDestruction is of inControlsGlobal
-- 	`destrProgramDelay` : destrProgramDelay is of inControlsGlobal
-- 	`destrCapacityRelID` : destrCapacityRelID identifies inControlsGlobal
-- 	`destrPriorityOrder` : destrPriorityOrder is of inControlsGlobal
-- 	`destrReasonOrder` : destrReasonOrder is of inControlsGlobal
-- 	`includeVaccination` : includeVaccination is of inControlsGlobal
-- 	`vaccDetectedUnitsBeforeStart` : vaccDetectedUnitsBeforeStart is of inControlsGlobal
-- 	`vaccCapacityRelID` : vaccCapacityRelID identifies inControlsGlobal
-- 	`vaccPriorityOrder` : vaccPriorityOrder is of inControlsGlobal  
create table `inControlsGlobal` ( 
	`controlsGlobalID` CHAR(10),
	`includeDetection` BIT,
	`includeDestruction` BIT,
	`destrProgramDelay` INTEGER,
	`destrCapacityRelID` INTEGER,
	`destrPriorityOrder` VARCHAR(255),
	`destrReasonOrder` VARCHAR(255),
	`includeVaccination` BIT,
	`vaccDetectedUnitsBeforeStart` INTEGER,
	`vaccCapacityRelID` INTEGER,
	`vaccPriorityOrder` VARCHAR(255), constraint `inControlsGlobal_PK` primary key (`controlsGlobalID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`inControlsGlobal`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'inControlsGlobal' :
-- 	`controlsGlobalID`
-- 	`destrCapacityRelID`
-- 	`vaccCapacityRelID`


-- Create new table `inProductionTypePair`.
-- `inProductionTypePair` : Table of inProductionTypePair
-- 	`sourceProductionTypeID` : sourceProductionTypeID partly identifies inProductionTypePair
-- 	`destProductionTypeID` : destProductionTypeID partly identifies inProductionTypePair
-- 	`useDirectContact` : useDirectContact is of inProductionTypePair
-- 	`directContactSpreadID` : directContactSpreadID is of inProductionTypePair
-- 	`useIndirectContact` : useIndirectContact is of inProductionTypePair
-- 	`indirectContactSpreadID` : indirectContactSpreadID is of inProductionTypePair
-- 	`useAirborneSpread` : useAirborneSpread is of inProductionTypePair
-- 	`airborneContactSpreadID` : airborneContactSpreadID is of inProductionTypePair  
create table `inProductionTypePair` ( 
	`sourceProductionTypeID` INTEGER,
	`destProductionTypeID` INTEGER,
	`useDirectContact` BIT,
	`directContactSpreadID` INTEGER,
	`useIndirectContact` BIT,
	`indirectContactSpreadID` INTEGER,
	`useAirborneSpread` BIT,
	`airborneContactSpreadID` INTEGER, constraint `inProductionTypePairs_PK` primary key (`sourceProductionTypeID`, `destProductionTypeID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`inProductionTypePair`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'inProductionTypePair' :
-- 	`sourceProductionTypeID`
-- 	`destProductionTypeID`


-- Create new table `inDiseaseSpread`.
-- `inDiseaseSpread` : Table of inDiseaseSpread
-- 	`spreadID` : spreadID identifies inDiseaseSpread
-- 	`spreadMethodCode` : spreadMethodCode is of inDiseaseSpread
-- 	`latentCanInfect` : latentCanInfect is of inDiseaseSpread
-- 	`subclinicalCanInfect` : subclinicalCanInfect is of inDiseaseSpread
-- 	`contactRate` : contactRate is of inDiseaseSpread
-- 	`infectionProbability` : infectionProbability is of inDiseaseSpread
-- 	`distancePdfID` : distancePdfID partly identifies inDiseaseSpread
-- 	`movementControlRelID` : movementControlRelID partly identifies inDiseaseSpread
-- 	`transportDelayPdfID` : transportDelayPdfID partly identifies inDiseaseSpread
-- 	`probAirborneSpread1km` : probAirborneSpread1km is of inDiseaseSpread
-- 	`maxDistAirborneSpread` : maxDistAirborneSpread is of inDiseaseSpread
-- 	`windDirectionStart` : windDirectionStart is of inDiseaseSpread
-- 	`windDirectionEnd` : windDirectionEnd is of inDiseaseSpread  
create table `inDiseaseSpread` ( 
	`spreadID` COUNTER,
	`spreadMethodCode` CHAR(1),
	`latentCanInfect` BIT,
	`subclinicalCanInfect` BIT,
	`contactRate` DOUBLE,
	`infectionProbability` DOUBLE,
	`distancePdfID` INTEGER,
	`movementControlRelID` INTEGER,
	`transportDelayPdfID` INTEGER,
	`probAirborneSpread1km` DOUBLE,
	`maxDistAirborneSpread` DOUBLE,
	`windDirectionStart` INTEGER,
	`windDirectionEnd` INTEGER, constraint `inProductionTypePair_PK` primary key (`spreadID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`inDiseaseSpread`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'inDiseaseSpread' :
-- 	`spreadID`
-- 	`distancePdfID`
-- 	`movementControlRelID`
-- 	`transportDelayPdfID`


-- Create new table `inProductionType`.
-- `inProductionType` : Table of inProductionType
-- 	`transitionDisease` : transitionDisease is of inProductionType
-- 	`latentPeriodPdfID` : latentPeriodPdfID partly identifies inProductionType
-- 	`subclinicalPeriodPdfID` : subclinicalPeriodPdfID partly identifies inProductionType
-- 	`clinicalPeriodPdfID` : clinicalPeriodPdfID partly identifies inProductionType
-- 	`immunePeriodPdfID` : immunePeriodPdfID partly identifies inProductionType
-- 	`detection` : detection is of inProductionType
-- 	`detProbReportVsTimeClinicalRelID` : detProbReportVsTimeClinicalRelID partly identifies inProductionType
-- 	`detProbReportVsFirstDetectionRelID` : detProbReportVsFirstDetectionRelID partly identifies inProductionType
-- 	`destrBasic` : destrBasic is of inProductionType
-- 	`destrRing` : destrRing is of inProductionType
-- 	`destrRingRadius` : destrRingRadius is of inProductionType
-- 	`destrDirect` : destrDirect is of inProductionType
-- 	`destrDirectSuccess` : destrDirectSuccess is of inProductionType
-- 	`destrDirectTracePeriod` : destrDirectTracePeriod is of inProductionType
-- 	`destrIndirect` : destrIndirect is of inProductionType
-- 	`destrIndirectSuccess` : destrIndirectSuccess is of inProductionType
-- 	`destrIndirectTracePeriod` : destrIndirectTracePeriod is of inProductionType
-- 	`destrPriority` : destrPriority is of inProductionType
-- 	`useVaccination` : useVaccination is of inProductionType
-- 	`vaccMinTimeBetweenVaccinations` : vaccMinTimeBetweenVaccinations is of inProductionType
-- 	`vaccDaysToImmunity` : vaccDaysToImmunity is of inProductionType
-- 	`vaccImmunePeriodPdfID` : vaccImmunePeriodPdfID partly identifies inProductionType
-- 	`vaccRing` : vaccRing is of inProductionType
-- 	`vaccRingRadius` : vaccRingRadius is of inProductionType
-- 	`vaccPriority` : vaccPriority is of inProductionType  
create table `inProductionType` ( 
	`productionTypeID` COUNTER,
	`descr` VARCHAR(255),
	`proportion` INTEGER,
	`unitSizePdf` INTEGER,
	`transitionDisease` BIT,
	`latentPeriodPdfID` INTEGER,
	`subclinicalPeriodPdfID` INTEGER,
	`clinicalPeriodPdfID` INTEGER,
	`immunePeriodPdfID` INTEGER,
	`detection` BIT,
	`detProbReportVsTimeClinicalRelID` INTEGER,
	`detProbReportVsFirstDetectionRelID` INTEGER,
	`destrBasic` BIT,
	`destrRing` BIT,
	`destrRingRadius` DOUBLE,
	`destrDirect` BIT,
	`destrDirectSuccess` DOUBLE,
	`destrDirectTracePeriod` INTEGER,
	`destrIndirect` BIT,
	`destrIndirectSuccess` DOUBLE,
	`destrIndirectTracePeriod` INTEGER,
	`destrPriority` INTEGER,
	`useVaccination` BIT,
	`vaccMinTimeBetweenVaccinations` INTEGER,
	`vaccDaysToImmunity` INTEGER,
	`vaccImmunePeriodPdfID` INTEGER,
	`vaccRing` BIT,
	`vaccRingRadius` DOUBLE,
	`vaccPriority` INTEGER, constraint `inProductionType_PK` primary key (`productionTypeID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`inProductionType`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'inProductionType' :
-- 	`productionTypeID`
-- 	`descr`
-- 	`latentPeriodPdfID`
-- 	`subclinicalPeriodPdfID`
-- 	`clinicalPeriodPdfID`
-- 	`immunePeriodPdfID`
-- 	`detProbReportVsTimeClinicalRelID`
-- 	`detProbReportVsFirstDetectionRelID`
-- 	`vaccImmunePeriodPdfID`


-- Note: Access does not support default values in SQL DDL.  Default values will be created in
-- the database using DAO only if there is a connection to the Access MDB file during DDL generation.
-- Columns with default values for table 'inProductionType' :
-- 	`proportion`
-- 	`unitSizePdf`
-- 	`latentPeriodPdfID`
-- 	`subclinicalPeriodPdfID`
-- 	`clinicalPeriodPdfID`
-- 	`immunePeriodPdfID`


-- Create new table `inChart`.
-- `inChart` : Table of inChart
-- 	`isPdf` : PDF or Relationship
-- 	`chartType` : chartType is of inChart
-- 	`mean` : mean is of inChart
-- 	`stddev` : stddev is of inChart
-- 	`a` : a is of inChart
-- 	`c` : c is of inChart
-- 	`b` : b is of inChart
-- 	`xAxisUnits` : xAxisUnits is of inChart
-- 	`yAxisUnits` : yAxisUnits is of inChart  
create table `inChart` ( 
	`chartID` COUNTER,
	`fieldName` VARCHAR(50),
	`chartName` VARCHAR(150),
	`isPdf` BIT,
	`chartType` VARCHAR(20),
	`mean` DOUBLE,
	`stddev` DOUBLE,
	`a` DOUBLE,
	`c` DOUBLE,
	`b` DOUBLE,
	`xAxisUnits` VARCHAR(50),
	`yAxisUnits` VARCHAR(50), constraint `inChart_PK` primary key (`chartID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`inChart`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'inChart' :
-- 	`chartID`
-- 	`fieldName`
-- 	`chartName`


-- Note: Access does not support default values in SQL DDL.  Default values will be created in
-- the database using DAO only if there is a connection to the Access MDB file during DDL generation.
-- Columns with default values for table 'inChart' :
-- 	`fieldName`


-- Create new table `inChartDetail`.
-- `inChartDetail` : Table of inChartDetail
-- 	`chartID` : chartID partly identifies inChartDetail  
create table `inChartDetail` ( 
	`pointOrder` INTEGER,
	`x` DOUBLE,
	`y` DOUBLE,
	`chartID` LONG, constraint `inChartDetail_PK` primary key (`pointOrder`, `chartID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`inChartDetail`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'inChartDetail' :
-- 	`pointOrder`
-- 	`chartID`


-- Note: Access does not support default values in SQL DDL.  Default values will be created in
-- the database using DAO only if there is a connection to the Access MDB file during DDL generation.
-- Columns with default values for table 'inChartDetail' :
-- 	`x`
-- 	`y`


-- Create new table `dynHerd`.
-- `dynHerd` : Table of dynHerd
-- 	`initialStateCode` : initialStateCode is of dynHerd
-- 	`initialSize` : initialSize is of dynHerd
-- 	`finalStateCode` : finalStateCode is of dynHerd
-- 	`cumInfected` : cumInfected is of dynHerd
-- 	`cumVaccinated` : cumVaccinated is of dynHerd
-- 	`cumDestroyed` : cumDestroyed is of dynHerd  
create table `dynHerd` ( 
	`herdID` COUNTER,
	`productionTypeID` INTEGER,
	`latitude` DOUBLE,
	`longitude` DOUBLE,
	`initialStateCode` CHAR(1),
	`initialSize` LONG,
	`finalStateCode` CHAR(1),
	`cumInfected` INTEGER,
	`cumVaccinated` INTEGER,
	`cumDestroyed` INTEGER, constraint `dynHerd_PK` primary key (`herdID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`dynHerd`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'dynHerd' :
-- 	`herdID`
-- 	`productionTypeID`


-- Note: Access does not support default values in SQL DDL.  Default values will be created in
-- the database using DAO only if there is a connection to the Access MDB file during DDL generation.
-- Columns with default values for table 'dynHerd' :
-- 	`latitude`
-- 	`longitude`


-- Create new table `DBSchemaVersion`.
-- `DBSchemaVersion` : Table of DBSchemaVersion  
create table `DBSchemaVersion` ( 
	`VersionNumber` VARCHAR(255),
	`VersionDate` DATETIME,
	`VersionInfoURL` VARCHAR(255), constraint `DBSchemaVersion_PK` primary key (`VersionNumber`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`DBSchemaVersion`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'DBSchemaVersion' :
-- 	`VersionNumber`
-- 	`VersionDate`


-- Create new table `inGeneral`.
-- `inGeneral` : Table of inGeneral
-- 	`iterations` : Input Parameter for number of iterations
-- 	`days` : days is of inGeneral
-- 	`includeContactSpread` : includeContactSpread is of inGeneral
-- 	`includeAirborneSpread` : includeAirborneSpread is of inGeneral
-- 	`includeEconomics` : includeEconomics is of inGeneral  
create table `inGeneral` ( 
	`scenarioDescr` VARCHAR(255),
	`iterations` INTEGER,
	`days` INTEGER,
	`isStochastic` BIT,
	`includeContactSpread` BIT,
	`includeAirborneSpread` BIT,
	`includeEconomics` BIT,
	`simulationStartTime` DATETIME,
	`simulationEndTime` DATETIME, constraint `inGeneral_PK` primary key (`scenarioDescr`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`inGeneral`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'inGeneral' :
-- 	`scenarioDescr`
-- 	`iterations`
-- 	`days`
-- 	`isStochastic`
-- 	`includeContactSpread`
-- 	`includeAirborneSpread`
-- 	`includeEconomics`


-- Note: Access does not support default values in SQL DDL.  Default values will be created in
-- the database using DAO only if there is a connection to the Access MDB file during DDL generation.
-- Columns with default values for table 'inGeneral' :
-- 	`scenarioDescr`
-- 	`iterations`
-- 	`days`
-- 	`isStochastic`


-- Add the remaining keys, constraints and indexes for the table `inChart`.
create unique index `chartNameIndex` on `inChart` (
	`chartName`); 


-- Add foreign key constraints to table `inControlsGlobal`.
alter table `inControlsGlobal`
	add constraint `inChart_inControlsGlobal_FK1` foreign key (
		`destrCapacityRelID`)
	 references `inChart` (
		`chartID`); 

alter table `inControlsGlobal`
	add constraint `inChart_inControlsGlobal_FK2` foreign key (
		`vaccCapacityRelID`)
	 references `inChart` (
		`chartID`); 

-- Add foreign key constraints to table `inProductionTypePair`.
alter table `inProductionTypePair`
	add constraint `inProductionType_inProductionTypePairs_FK1` foreign key (
		`sourceProductionTypeID`)
	 references `inProductionType` (
		`productionTypeID`); 

alter table `inProductionTypePair`
	add constraint `inProductionType_inProductionTypePairs_FK2` foreign key (
		`destProductionTypeID`)
	 references `inProductionType` (
		`productionTypeID`); 

alter table `inProductionTypePair`
	add constraint `inDiseaseSpread_inProductionTypePairs_FK1` foreign key (
		`directContactSpreadID`)
	 references `inDiseaseSpread` (
		`spreadID`); 

alter table `inProductionTypePair`
	add constraint `inDiseaseSpread_inProductionTypePairs_FK2` foreign key (
		`indirectContactSpreadID`)
	 references `inDiseaseSpread` (
		`spreadID`); 

alter table `inProductionTypePair`
	add constraint `inDiseaseSpread_inProductionTypePairs_FK3` foreign key (
		`airborneContactSpreadID`)
	 references `inDiseaseSpread` (
		`spreadID`); 

-- Add foreign key constraints to table `inDiseaseSpread`.
alter table `inDiseaseSpread`
	add constraint `inChart_inProductionTypePair_FK1` foreign key (
		`distancePdfID`)
	 references `inChart` (
		`chartID`); 

alter table `inDiseaseSpread`
	add constraint `inChart_inProductionTypePair_FK3` foreign key (
		`movementControlRelID`)
	 references `inChart` (
		`chartID`); 

alter table `inDiseaseSpread`
	add constraint `inChart_inDiseaseSpread_FK3` foreign key (
		`transportDelayPdfID`)
	 references `inChart` (
		`chartID`); 

-- Add foreign key constraints to table `inProductionType`.
alter table `inProductionType`
	add constraint `FK1` foreign key (
		`latentPeriodPdfID`)
	 references `inChart` (
		`chartID`); 

alter table `inProductionType`
	add constraint `FK2` foreign key (
		`subclinicalPeriodPdfID`)
	 references `inChart` (
		`chartID`); 

alter table `inProductionType`
	add constraint `inChart_inProductionType_FK3` foreign key (
		`clinicalPeriodPdfID`)
	 references `inChart` (
		`chartID`); 

alter table `inProductionType`
	add constraint `FK4` foreign key (
		`immunePeriodPdfID`)
	 references `inChart` (
		`chartID`); 

alter table `inProductionType`
	add constraint `inChart_inProductionType_FK5` foreign key (
		`detProbReportVsTimeClinicalRelID`)
	 references `inChart` (
		`chartID`); 

alter table `inProductionType`
	add constraint `inChart_inProductionType_FK6` foreign key (
		`detProbReportVsFirstDetectionRelID`)
	 references `inChart` (
		`chartID`); 

alter table `inProductionType`
	add constraint `inChart_inProductionType_FK7` foreign key (
		`vaccImmunePeriodPdfID`)
	 references `inChart` (
		`chartID`); 

-- Add foreign key constraints to table `inChartDetail`.
alter table `inChartDetail`
	add constraint `inChart_inChartDetail_FK1` foreign key (
		`chartID`)
	 references `inChart` (
		`chartID`); 

-- Add foreign key constraints to table `dynHerd`.
alter table `dynHerd`
	add constraint `inProductionType_dynHerd_FK1` foreign key (
		`productionTypeID`)
	 references `inProductionType` (
		`productionTypeID`); 


-- This is the end of the Microsoft Visual Studio generated SQL DDL script.
