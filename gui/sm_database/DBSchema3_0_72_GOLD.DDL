--    This SQL DDL script was generated by Microsoft Visual Studio (Release Date: LOCAL BUILD).

--    Driver Used : Microsoft Visual Studio - Microsoft Access Driver.
--    Document    : E:\SpreadModel\_Databases\DBSchema3_0_72_GOLD.vsd.
--    Time Created: January 20, 2006 11:51 AM.
--    Operation   : From Visio Update Database Wizard.
--    Connected data source : NADTemplate3_0_50
--    Connected server      : ACCESS
--    Connected database    : E:\SPREADMODEL\_Databases\template-3_0_50.mdb



-- Update existing table `outDailyByProductionType`.
create table `outDailyByProductionType_IM0` ( 
	`iteration` INTEGER,
	`day` INTEGER,
	`tsdUSusc` INTEGER,
	`tsdASusc` INTEGER,
	`tsdULat` INTEGER,
	`tsdALat` INTEGER,
	`tsdUSubc` INTEGER,
	`tsdASubc` INTEGER,
	`tsdUClin` INTEGER,
	`tsdAClin` INTEGER,
	`tsdUNImm` INTEGER,
	`tsdANImm` INTEGER,
	`tsdUVImm` INTEGER,
	`tsdAVImm` INTEGER,
	`tsdUDest` INTEGER,
	`tsdADest` INTEGER,
	`tscUSusc` INTEGER,
	`tscASusc` INTEGER,
	`tscULat` INTEGER,
	`tscALat` INTEGER,
	`tscUSubc` INTEGER,
	`tscASubc` INTEGER,
	`tscUClin` INTEGER,
	`tscAClin` INTEGER,
	`tscUNImm` INTEGER,
	`tscANImm` INTEGER,
	`tscUVImm` INTEGER,
	`tscAVImm` INTEGER,
	`tscUDest` INTEGER,
	`tscADest` INTEGER,
	`infnUAir` INTEGER,
	`infnAAir` INTEGER,
	`infnUDir` INTEGER,
	`infnADir` INTEGER,
	`infnUInd` INTEGER,
	`infnAInd` INTEGER,
	`infcUIni` INTEGER,
	`infcAIni` INTEGER,
	`infcUAir` INTEGER,
	`infcAAir` INTEGER,
	`infcUDir` INTEGER,
	`infcADir` INTEGER,
	`infcUInd` INTEGER,
	`infcAInd` INTEGER,
	`expcUDir` INTEGER,
	`expcADir` INTEGER,
	`expcUInd` INTEGER,
	`expcAInd` INTEGER,
	`trcUDir` INTEGER,
	`trcADir` INTEGER,
	`trcUInd` INTEGER,
	`trcAInd` INTEGER,
	`trcUDirp` INTEGER,
	`trcADirp` INTEGER,
	`trcUIndp` INTEGER,
	`trcAIndp` INTEGER,
	`detnUClin` INTEGER,
	`detnAClin` INTEGER,
	`detcUClin` INTEGER,
	`detcAClin` INTEGER,
	`descUDet` INTEGER,
	`descADet` INTEGER,
	`descUDir` INTEGER,
	`descADir` INTEGER,
	`descUInd` INTEGER,
	`descAInd` INTEGER,
	`descURing` INTEGER,
	`descARing` INTEGER,
	`vaccURing` INTEGER,
	`vaccARing` INTEGER,
	`productionTypeID` INTEGER); 

insert into `outDailyByProductionType_IM0` (`iteration`, `day`, `tsdUSusc`, `tsdASusc`, `tsdULat`, `tsdALat`, `tsdUSubc`, `tsdASubc`, `tsdUClin`, `tsdAClin`, `tsdUNImm`, `tsdANImm`, `tsdUVImm`, `tsdAVImm`, `tsdUDest`, `tsdADest`, `tscUSusc`, `tscASusc`, `tscULat`, `tscALat`, `tscUSubc`, `tscASubc`, `tscUClin`, `tscAClin`, `tscUNImm`, `tscANImm`, `tscUVImm`, `tscAVImm`, `tscUDest`, `tscADest`, `infnUAir`, `infnAAir`, `infnUDir`, `infnADir`, `infnUInd`, `infnAInd`, `infcUIni`, `infcAIni`, `infcUAir`, `infcAAir`, `infcUDir`, `infcADir`, `infcUInd`, `infcAInd`, `expcUDir`, `expcADir`, `expcUInd`, `expcAInd`, `trcUDir`, `trcADir`, `trcUInd`, `trcAInd`, `trcUDirp`, `trcADirp`, `trcUIndp`, `trcAIndp`, `detnUClin`, `detnAClin`, `detcUClin`, `detcAClin`, `descUDet`, `descADet`, `descUDir`, `descADir`, `descUInd`, `descAInd`, `descURing`, `descARing`, `vaccURing`, `vaccARing`, `productionTypeID`) 
    select `outDailyByProductionType`.`iteration`, 
           `outDailyByProductionType`.`day`, 
           `outDailyByProductionType`.`tsdUSusc`, 
           `outDailyByProductionType`.`tsdASusc`, 
           `outDailyByProductionType`.`tsdULat`, 
           `outDailyByProductionType`.`tsdALat`, 
           `outDailyByProductionType`.`tsdUSubc`, 
           `outDailyByProductionType`.`tsdASubc`, 
           `outDailyByProductionType`.`tsdUClin`, 
           `outDailyByProductionType`.`tsdAClin`, 
           `outDailyByProductionType`.`tsdUNImm`, 
           `outDailyByProductionType`.`tsdANImm`, 
           `outDailyByProductionType`.`tsdUVImm`, 
           `outDailyByProductionType`.`tsdAVImm`, 
           `outDailyByProductionType`.`tsdUDest`, 
           `outDailyByProductionType`.`tsdADest`, 
           `outDailyByProductionType`.`tscUSusc`, 
           `outDailyByProductionType`.`tscASusc`, 
           `outDailyByProductionType`.`tscULat`, 
           `outDailyByProductionType`.`tscALat`, 
           `outDailyByProductionType`.`tscUSubc`, 
           `outDailyByProductionType`.`tscASubc`, 
           `outDailyByProductionType`.`tscUClin`, 
           `outDailyByProductionType`.`tscAClin`, 
           `outDailyByProductionType`.`tscUNImm`, 
           `outDailyByProductionType`.`tscANImm`, 
           `outDailyByProductionType`.`tscUVImm`, 
           `outDailyByProductionType`.`tscAVImm`, 
           `outDailyByProductionType`.`tscUDest`, 
           `outDailyByProductionType`.`tscADest`, 
           `outDailyByProductionType`.`infnUAir`, 
           `outDailyByProductionType`.`infnAAir`, 
           `outDailyByProductionType`.`infnUDir`, 
           `outDailyByProductionType`.`infnADir`, 
           `outDailyByProductionType`.`infnUInd`, 
           `outDailyByProductionType`.`infnAInd`, 
           `outDailyByProductionType`.`infcUIni`, 
           `outDailyByProductionType`.`infcAIni`, 
           `outDailyByProductionType`.`infcUAir`, 
           `outDailyByProductionType`.`infcAAir`, 
           `outDailyByProductionType`.`infcUDir`, 
           `outDailyByProductionType`.`infcADir`, 
           `outDailyByProductionType`.`infcUInd`, 
           `outDailyByProductionType`.`infcAInd`, 
           `outDailyByProductionType`.`expcUDir`, 
           `outDailyByProductionType`.`expcADir`, 
           `outDailyByProductionType`.`expcUInd`, 
           `outDailyByProductionType`.`expcAInd`, 
           `outDailyByProductionType`.`trcUDir`, 
           `outDailyByProductionType`.`trcADir`, 
           `outDailyByProductionType`.`trcUInd`, 
           `outDailyByProductionType`.`trcAInd`, 
           `outDailyByProductionType`.`trcUDirp`, 
           `outDailyByProductionType`.`trcADirp`, 
           `outDailyByProductionType`.`trcUIndp`, 
           `outDailyByProductionType`.`trcAIndp`, 
           `outDailyByProductionType`.`detnUClin`, 
           `outDailyByProductionType`.`detnAClin`, 
           `outDailyByProductionType`.`detcUClin`, 
           `outDailyByProductionType`.`detcAClin`, 
           `outDailyByProductionType`.`descUDet`, 
           `outDailyByProductionType`.`descADet`, 
           `outDailyByProductionType`.`descUDir`, 
           `outDailyByProductionType`.`descADir`, 
           `outDailyByProductionType`.`descUInd`, 
           `outDailyByProductionType`.`descAInd`, 
           `outDailyByProductionType`.`descURing`, 
           `outDailyByProductionType`.`descARing`, 
           `outDailyByProductionType`.`vaccURing`, 
           `outDailyByProductionType`.`vaccARing`, 
           `outDailyByProductionType`.`productionTypeID`  
    from `outDailyByProductionType`;


alter table `outDailyByProductionType`
	drop constraint `inProductionType_outDailyByProductionType_FK1`;


drop table `outDailyByProductionType`; 


-- `outDailyByProductionType` : Table of outDailyByProductionType
-- 	`tsdUSusc` : Number of susceptible units on the given day
-- 	`tsdASusc` : Number of animals in susceptible units on the given day
-- 	Number of animals in susceptible units on the given day
-- 	`tsdULat` : Number of latent units on the given day
-- 	`tsdALat` : Number of animals in latent units on the given day
-- 	`tsdUSubc` : Number of subclinically infectious units on the given day
-- 	`tsdASubc` : Number of animals in subclinically infected units on the given day
-- 	`tsdUClin` : Number of clinical units on the given day
-- 	`tsdAClin` : Number of animals in clinical units on the given day
-- 	`tsdUNImm` : Number of naturally immune units on the given day
-- 	`tsdANImm` : Number of animals in naturally immune units on the given day
-- 	`tsdUVImm` : Number of vaccine-immune units on the given day
-- 	`tsdAVImm` : Number of animals in vaccine-immune units on the given day
-- 	`tsdUDest` : Number of units with the state "destroyed" on the given day (NOT the number of units destroyed on the given day!!)
-- 	`tsdADest` : Number of animals in units with the state "destroyed" on the given day (NOT the number of animals in units destroyed on the given day!!)
-- 	`tscUSusc` : Number of units that are or become susceptible over the course of an iteration
-- 	`tscASusc` : Total number of animals in all units that are or become susceptible over the course of an iteration
-- 	`tscULat` : Number of units that are or become latent over the course of an iteration
-- 	`tscALat` : Total number of animals in all units that are or become latent over the course of an iteration
-- 	`tscUSubc` : Number of units that are or become subclinically infectious over the course of an iteration
-- 	`tscASubc` : Total number of animals in all units that are or become infectious over the course of an iteration
-- 	`tscUClin` : Number of units that are or become clinical over the course of an iteration
-- 	`tscAClin` : Total number of animals in all units that are or become clinical over the course of an iteration
-- 	`tscUNImm` : Number of units that are or become naturally immune over the course of an iteration
-- 	`tscANImm` : Total number of animals in all units that are or become naturally immune over the course of an iteration
-- 	`tscUVImm` : Number of units that are or become vaccine immune over the course of an iteration
-- 	`tscAVImm` : Total number of animals in all units that are or become vaccine immune over the course of an iteration
-- 	`tscUDest` : Number of units that are destroyed over the course of an iteration
-- 	`tscADest` : Total number of animals in all units that are destroyed over the course of an iteration
-- 	`infnUAir` : Number of new units infected on this day by airborne spread
-- 	`infnAAir` : Number of animals in new units infected on this day by airborne spread
-- 	`infnUDir` : Number of new units infected on this day by direct contact
-- 	`infnADir` : Number of animals in new units infected on this day by direct contact
-- 	`infnUInd` : Number of new units infected on this day by indirect contact
-- 	`infnAInd` : Number of animals in new units infected on this day by indirect contact
-- 	`infcUIni` : Number of units that are initially infected at the beginning of an iteration
-- 	`infcAIni` : Number of animals in units that are initially infected at the beginning of an iteration
-- 	`infcUAir` : Number of units that become infected by airborne spread over the course of an iteration
-- 	`infcAAir` : Number of animals in units that become infected by airborne spread over the course of an iteration
-- 	`infcUDir` : Number of units that become infected by direct contact over the course of an iteration
-- 	`infcADir` : Number of animals in units that become infected by direct contact over the course of an iteration
-- 	`infcUInd` : Number of units that become infected by indirect contact over the course of an iteration
-- 	`infcAInd` : Number of animals in units that become infected by indirect contact over the course of an iteration
-- 	`expcUDir` : Total number of units directly exposed to any infected unit over the course of an iteration
-- 	`expcADir` : Total number of animals in units directly exposed to any infected unit over the course of an iteration
-- 	`expcUInd` : Total number of units indirectly exposed to any infected unit over the course of an iteration
-- 	`expcAInd` : Total number of animals in units indirectly exposed to any infected unit over the course of an iteration
-- 	`trcUDir` : Number of units directly exposed and successfully traced over the course of an iteration
-- 	`trcADir` : Total number of animals in all units directly exposed and successfully traced over the course of an iteration
-- 	`trcUInd` : Number of units indirectly exposed and successfully traced over the course of an iteration
-- 	`trcAInd` : Total number of animals in all units indirectly exposed and successfully traced over the course of an iteration
-- 	`trcUDirp` : Number of units directly exposed that could possibly have been traced over the course of an iteration
-- 	`trcADirp` : Total number of animals in all units directly exposed that could possibly have been traced over the course of an iteration
-- 	`trcUIndp` : Number of units indirectly exposed that could possibly have been traced over the course of an iteration
-- 	`trcAIndp` : Total number of animals in units indirectly exposed that could possibly have been traced over the course of an iteration
-- 	`detnUClin` : Number of units detected by clinical signs on this day
-- 	`detnAClin` : Total number of animals in units detected by clinical signs on this day
-- 	`desnUAll` : Total number of units destroyed for any reason on this day
-- 	`desnAAll` : Total number of animals in units destroyed for any reason on this day
-- 	`vaccnUAll` : Total number of units vaccinated for any reason on this day
-- 	`vaccnAAll` : Total number of animals in units vaccinated for any reason on this day
-- 	`detcUClin` : Number of units detected by clinical signs over the course of an iteration
-- 	`detcAClin` : Total number of animals in all units detected by clinical signs over the course of an iteration
-- 	`descUDet` : Number of units destroyed because they were detected positive over the course of an iteration
-- 	`descADet` : Total number of animals in all units destroyed because they were detected positive over the course of an iteration
-- 	`descUDir` : Number of units destroyed because they were direct traces over the course of an iteration
-- 	`descADir` : Total number of animals in units destroyed because they were direct traces over the course of an iteration
-- 	`descUInd` : Number of units destroyed because they were indirect traces over the course of an iteration
-- 	`descAInd` : Total number of animals in units destroyed because they were indirect traces over the course of an iteration
-- 	`descURing` : Number of units destroyed because they were in a destruction ring over the course of an iteration
-- 	`descARing` : Total number of animals in all units destroyed because they were in a destruction ring over the course of an iteration
-- 	`vaccURing` : Number of units vaccinated in rings around detected-infected units over the course of an iteration
-- 	`vaccARing` : Total number of animals in all units vaccinated in rings around detected-infected units over the course of an iteration
-- 	`productionTypeID` : productionTypeID partly identifies outDailyByProductionType  
create table `outDailyByProductionType` ( 
	`iteration` INTEGER,
	`day` INTEGER,
	`tsdUSusc` INTEGER,
	`tsdASusc` INTEGER,
	`tsdULat` INTEGER,
	`tsdALat` INTEGER,
	`tsdUSubc` INTEGER,
	`tsdASubc` INTEGER,
	`tsdUClin` INTEGER,
	`tsdAClin` INTEGER,
	`tsdUNImm` INTEGER,
	`tsdANImm` INTEGER,
	`tsdUVImm` INTEGER,
	`tsdAVImm` INTEGER,
	`tsdUDest` INTEGER,
	`tsdADest` INTEGER,
	`tscUSusc` INTEGER,
	`tscASusc` INTEGER,
	`tscULat` INTEGER,
	`tscALat` INTEGER,
	`tscUSubc` INTEGER,
	`tscASubc` INTEGER,
	`tscUClin` INTEGER,
	`tscAClin` INTEGER,
	`tscUNImm` INTEGER,
	`tscANImm` INTEGER,
	`tscUVImm` INTEGER,
	`tscAVImm` INTEGER,
	`tscUDest` INTEGER,
	`tscADest` INTEGER,
	`infnUAir` INTEGER,
	`infnAAir` INTEGER,
	`infnUDir` INTEGER,
	`infnADir` INTEGER,
	`infnUInd` INTEGER,
	`infnAInd` INTEGER,
	`infcUIni` INTEGER,
	`infcAIni` INTEGER,
	`infcUAir` INTEGER,
	`infcAAir` INTEGER,
	`infcUDir` INTEGER,
	`infcADir` INTEGER,
	`infcUInd` INTEGER,
	`infcAInd` INTEGER,
	`expcUDir` INTEGER,
	`expcADir` INTEGER,
	`expcUInd` INTEGER,
	`expcAInd` INTEGER,
	`trcUDir` INTEGER,
	`trcADir` INTEGER,
	`trcUInd` INTEGER,
	`trcAInd` INTEGER,
	`trcUDirp` INTEGER,
	`trcADirp` INTEGER,
	`trcUIndp` INTEGER,
	`trcAIndp` INTEGER,
	`detnUClin` INTEGER,
	`detnAClin` INTEGER,
	`desnUAll` INTEGER,
	`desnAAll` INTEGER,
	`vaccnUAll` INTEGER,
	`vaccnAAll` INTEGER,
	`detcUClin` INTEGER,
	`detcAClin` INTEGER,
	`descUDet` INTEGER,
	`descADet` INTEGER,
	`descUDir` INTEGER,
	`descADir` INTEGER,
	`descUInd` INTEGER,
	`descAInd` INTEGER,
	`descURing` INTEGER,
	`descARing` INTEGER,
	`vaccURing` INTEGER,
	`vaccARing` INTEGER,
	`productionTypeID` INTEGER); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`outDailyByProductionType`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'outDailyByProductionType' :
-- 	`iteration`
-- 	`day`
-- 	`productionTypeID`


insert into `outDailyByProductionType` (`iteration`, `day`, `tsdUSusc`, `tsdASusc`, `tsdULat`, `tsdALat`, `tsdUSubc`, `tsdASubc`, `tsdUClin`, `tsdAClin`, `tsdUNImm`, `tsdANImm`, `tsdUVImm`, `tsdAVImm`, `tsdUDest`, `tsdADest`, `tscUSusc`, `tscASusc`, `tscULat`, `tscALat`, `tscUSubc`, `tscASubc`, `tscUClin`, `tscAClin`, `tscUNImm`, `tscANImm`, `tscUVImm`, `tscAVImm`, `tscUDest`, `tscADest`, `infnUAir`, `infnAAir`, `infnUDir`, `infnADir`, `infnUInd`, `infnAInd`, `infcUIni`, `infcAIni`, `infcUAir`, `infcAAir`, `infcUDir`, `infcADir`, `infcUInd`, `infcAInd`, `expcUDir`, `expcADir`, `expcUInd`, `expcAInd`, `trcUDir`, `trcADir`, `trcUInd`, `trcAInd`, `trcUDirp`, `trcADirp`, `trcUIndp`, `trcAIndp`, `detnUClin`, `detnAClin`, `detcUClin`, `detcAClin`, `descUDet`, `descADet`, `descUDir`, `descADir`, `descUInd`, `descAInd`, `descURing`, `descARing`, `vaccURing`, `vaccARing`, `productionTypeID`) 
    select `outDailyByProductionType_IM0`.`iteration`, 
           `outDailyByProductionType_IM0`.`day`, 
           `outDailyByProductionType_IM0`.`tsdUSusc`, 
           `outDailyByProductionType_IM0`.`tsdASusc`, 
           `outDailyByProductionType_IM0`.`tsdULat`, 
           `outDailyByProductionType_IM0`.`tsdALat`, 
           `outDailyByProductionType_IM0`.`tsdUSubc`, 
           `outDailyByProductionType_IM0`.`tsdASubc`, 
           `outDailyByProductionType_IM0`.`tsdUClin`, 
           `outDailyByProductionType_IM0`.`tsdAClin`, 
           `outDailyByProductionType_IM0`.`tsdUNImm`, 
           `outDailyByProductionType_IM0`.`tsdANImm`, 
           `outDailyByProductionType_IM0`.`tsdUVImm`, 
           `outDailyByProductionType_IM0`.`tsdAVImm`, 
           `outDailyByProductionType_IM0`.`tsdUDest`, 
           `outDailyByProductionType_IM0`.`tsdADest`, 
           `outDailyByProductionType_IM0`.`tscUSusc`, 
           `outDailyByProductionType_IM0`.`tscASusc`, 
           `outDailyByProductionType_IM0`.`tscULat`, 
           `outDailyByProductionType_IM0`.`tscALat`, 
           `outDailyByProductionType_IM0`.`tscUSubc`, 
           `outDailyByProductionType_IM0`.`tscASubc`, 
           `outDailyByProductionType_IM0`.`tscUClin`, 
           `outDailyByProductionType_IM0`.`tscAClin`, 
           `outDailyByProductionType_IM0`.`tscUNImm`, 
           `outDailyByProductionType_IM0`.`tscANImm`, 
           `outDailyByProductionType_IM0`.`tscUVImm`, 
           `outDailyByProductionType_IM0`.`tscAVImm`, 
           `outDailyByProductionType_IM0`.`tscUDest`, 
           `outDailyByProductionType_IM0`.`tscADest`, 
           `outDailyByProductionType_IM0`.`infnUAir`, 
           `outDailyByProductionType_IM0`.`infnAAir`, 
           `outDailyByProductionType_IM0`.`infnUDir`, 
           `outDailyByProductionType_IM0`.`infnADir`, 
           `outDailyByProductionType_IM0`.`infnUInd`, 
           `outDailyByProductionType_IM0`.`infnAInd`, 
           `outDailyByProductionType_IM0`.`infcUIni`, 
           `outDailyByProductionType_IM0`.`infcAIni`, 
           `outDailyByProductionType_IM0`.`infcUAir`, 
           `outDailyByProductionType_IM0`.`infcAAir`, 
           `outDailyByProductionType_IM0`.`infcUDir`, 
           `outDailyByProductionType_IM0`.`infcADir`, 
           `outDailyByProductionType_IM0`.`infcUInd`, 
           `outDailyByProductionType_IM0`.`infcAInd`, 
           `outDailyByProductionType_IM0`.`expcUDir`, 
           `outDailyByProductionType_IM0`.`expcADir`, 
           `outDailyByProductionType_IM0`.`expcUInd`, 
           `outDailyByProductionType_IM0`.`expcAInd`, 
           `outDailyByProductionType_IM0`.`trcUDir`, 
           `outDailyByProductionType_IM0`.`trcADir`, 
           `outDailyByProductionType_IM0`.`trcUInd`, 
           `outDailyByProductionType_IM0`.`trcAInd`, 
           `outDailyByProductionType_IM0`.`trcUDirp`, 
           `outDailyByProductionType_IM0`.`trcADirp`, 
           `outDailyByProductionType_IM0`.`trcUIndp`, 
           `outDailyByProductionType_IM0`.`trcAIndp`, 
           `outDailyByProductionType_IM0`.`detnUClin`, 
           `outDailyByProductionType_IM0`.`detnAClin`, 
           `outDailyByProductionType_IM0`.`detcUClin`, 
           `outDailyByProductionType_IM0`.`detcAClin`, 
           `outDailyByProductionType_IM0`.`descUDet`, 
           `outDailyByProductionType_IM0`.`descADet`, 
           `outDailyByProductionType_IM0`.`descUDir`, 
           `outDailyByProductionType_IM0`.`descADir`, 
           `outDailyByProductionType_IM0`.`descUInd`, 
           `outDailyByProductionType_IM0`.`descAInd`, 
           `outDailyByProductionType_IM0`.`descURing`, 
           `outDailyByProductionType_IM0`.`descARing`, 
           `outDailyByProductionType_IM0`.`vaccURing`, 
           `outDailyByProductionType_IM0`.`vaccARing`, 
           `outDailyByProductionType_IM0`.`productionTypeID`  
    from `outDailyByProductionType_IM0`;


drop table `outDailyByProductionType_IM0`; 


alter table `outDailyByProductionType`
	add constraint `outDailyEpiByProductionType_PK` primary key (`day`, `iteration`, `productionTypeID`) ; 


-- Restore foreign key constraints for existing tables
alter table `outDailyByProductionType`
	add constraint `inProductionType_outDailyByProductionType_FK1` foreign key (
		`productionTypeID`)
	 references `inProductionType` (
		`productionTypeID`); 


-- This is the end of the Microsoft Visual Studio generated SQL DDL script.
