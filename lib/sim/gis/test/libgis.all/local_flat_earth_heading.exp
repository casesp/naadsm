set timeout 3
#
# expectations that clean up in case of error. Note that `$test' is
# a purely local variable.
#
# The first of these is used to match any bad responses, and resynchronise
# things by finding a prompt. The second is a timeout error, and shouldn't
# ever be triggered.
#
expect_after {
	-re "\[^\n\r\]*$prompt$" {
		fail "$test (bad match)"
		if { $verbose > 0 } {
			regexp ".*\r\n(\[^\r\n\]+)(\[\r\n\])+$prompt$" \
						$expect_out(buffer) "" output
			send_user "\tUnmatched output: \"$output\"\n"
		}
	}
	timeout {
		fail "$test (timeout)"
	}
}



#
# The following tests use the local flat-Earth approximation to heading (in
# which meridians converge).
#

#
# Test with point B 1 km east of point A on the equator and at latitudes 45 and
# 80 degrees.
#
local_heading_test  0 0  0 [expr 1/($dd*cos($deg2rad* 0))] 90 "B 1 km E of A at equator"
local_heading_test 45 0 45 [expr 1/($dd*cos($deg2rad*45))] 90 "B 1 km E of A at lat=45"
local_heading_test 80 0 80 [expr 1/($dd*cos($deg2rad*80))] 90 "B 1 km E of A at lat=80"



#
# Test with point B 2 km west of point A on the equator and at latitudes 45 and
# 80 degrees.
#
local_heading_test  0 0  0 [expr -2/($dd*cos($deg2rad* 0))] 270 "B 2 km W of A at equator"
local_heading_test 45 0 45 [expr -2/($dd*cos($deg2rad*45))] 270 "B 2 km W of A at lat=45"
local_heading_test 80 0 80 [expr -2/($dd*cos($deg2rad*80))] 270 "B 2 km W of A at lat=80"



#
# Test with point B 5 km north of point A with the reference point on the
# equator and at latitudes 45 and 80 degrees.
#
local_heading_test  0 0 [expr    5/$dd] 0 0 "B 5 km N of A at equator"
local_heading_test 45 0 [expr 45+5/$dd] 0 0 "B 5 km N of A at lat=45"
local_heading_test 80 0 [expr 80+5/$dd] 0 0 "B 5 km N of A at lat=80"



#
# Test with point B 10 km south of point A with the reference point on the
# equator and at latitudes 45 and 80 degrees.
#
local_heading_test 0  0 [expr   -10/$dd] 0 180 "B 10 km S of A at equator"
local_heading_test 45 0 [expr 45-10/$dd] 0 180 "B 10 km S of A at lat=45"
local_heading_test 80 0 [expr 80-10/$dd] 0 180 "B 10 km S of A at lat=80"



#
# Test with point B 1 km northeast of point A with the reference point on the
# equator and at latitudes 45 and 80 degrees.
#
local_heading_test  0 0 [expr    sqrt(0.5)/$dd] [expr sqrt(0.5)/($dd*cos($deg2rad* 0))] 45 "B 1 km NE of A at equator"
local_heading_test 45 0 [expr 45+sqrt(0.5)/$dd] [expr sqrt(0.5)/($dd*cos($deg2rad*45))] 45 "B 1 km NE of A at lat=45"
local_heading_test 80 0 [expr 80+sqrt(0.5)/$dd] [expr sqrt(0.5)/($dd*cos($deg2rad*80))] 45 "B 1 km NE of A at lat=80"



#
# Test with point B 1 km southwest of point A with the reference point on the
# equator and at latitudes 45 and 80 degrees.
#
local_heading_test  0 0 [expr   -sqrt(0.5)/$dd] [expr -sqrt(0.5)/($dd*cos($deg2rad* 0))] 225 "B 1 km SW of A at equator"
local_heading_test 45 0 [expr 45-sqrt(0.5)/$dd] [expr -sqrt(0.5)/($dd*cos($deg2rad*45))] 225 "B 1 km SW of A at lat=45"
local_heading_test 80 0 [expr 80-sqrt(0.5)/$dd] [expr -sqrt(0.5)/($dd*cos($deg2rad*80))] 225 "B 1 km SW of A at lat=80"



#
# Test with point B 1 km east of point A, on opposite sides of the +180/-180
# line, on the equator and at latitudes 45 and 80 degrees.
#
local_heading_test  0 [expr 180-0.5/($dd*cos($deg2rad* 0))/2]  0 [expr -180+0.5/($dd*cos($deg2rad* 0))/2] 90 "B 1 km E of A, across +180/-180 line, at equator"
local_heading_test 45 [expr 180-0.5/($dd*cos($deg2rad*45))/2] 45 [expr -180+0.5/($dd*cos($deg2rad*45))/2] 90 "B 1 km E of A, across +180/-180 line, at lat=45"
local_heading_test 80 [expr 180-0.5/($dd*cos($deg2rad*80))/2] 80 [expr -180+0.5/($dd*cos($deg2rad*80))/2] 90 "B 1 km E of A, across +180/-180 line, at lat=80"



#
# Same test as above, but reverse points A and B.
#
local_heading_test  0 [expr -180+0.5/($dd*cos($deg2rad* 0))/2] 0  [expr 180-0.5/($dd*cos($deg2rad* 0))/2] 270 "B 1 km W of A, across +180/-180 line, at equator"
local_heading_test 45 [expr -180+0.5/($dd*cos($deg2rad*45))/2] 45 [expr 180-0.5/($dd*cos($deg2rad*45))/2] 270 "B 1 km W of A, across +180/-180 line, at lat=45"
local_heading_test 80 [expr -180+0.5/($dd*cos($deg2rad*80))/2] 80 [expr 180-0.5/($dd*cos($deg2rad*80))/2] 270 "B 1 km W of A, across +180/-180 line, at lat=80"



#
# Test with point B 1 km northeast of point A, on opposite sides of the
# +180/-180 line, with the reference point on the equator and at latitudes 45
# and 80 degrees.
#
local_heading_test  0 [expr 180-sqrt(0.5)/($dd*cos($deg2rad* 0))/2] [expr    sqrt(0.5)/$dd] [expr -180+sqrt(0.5)/($dd*cos($deg2rad* 0))/2] 45 "B 1 km NE of A, across +180/-180 line, at equator"
local_heading_test 45 [expr 180-sqrt(0.5)/($dd*cos($deg2rad*45))/2] [expr 45+sqrt(0.5)/$dd] [expr -180+sqrt(0.5)/($dd*cos($deg2rad*45))/2] 45 "B 1 km NE of A, across +180/-180 line, at lat=45"
local_heading_test 80 [expr 180-sqrt(0.5)/($dd*cos($deg2rad*80))/2] [expr 80+sqrt(0.5)/$dd] [expr -180+sqrt(0.5)/($dd*cos($deg2rad*80))/2] 45 "B 1 km NE of A, across +180/-180 line, at lat=80"



#
# Similar to above, but reverse points A and B.  This one is tricky because
# corrected east-west distances are computed using the latitude of the *first*
# point, which is not exactly 0, 45, or 80 this time.
#
set lat0 [expr sqrt(0.5)/$dd]
local_heading_test $lat0 [expr -180+sqrt(0.5)/($dd*cos($deg2rad*$lat0))/2]  0 [expr 180-sqrt(0.5)/($dd*cos($deg2rad*$lat0))/2] 225 "B 1 km SW of A, across +180/-180 line, at equator"
set lat0 [expr 45+sqrt(0.5)/$dd]
local_heading_test $lat0 [expr -180+sqrt(0.5)/($dd*cos($deg2rad*$lat0))/2] 45 [expr 180-sqrt(0.5)/($dd*cos($deg2rad*$lat0))/2] 225 "B 1 km SW of A, across +180/-180 line, at lat=45"
set lat0 [expr 80+sqrt(0.5)/$dd]
local_heading_test $lat0 [expr -180+sqrt(0.5)/($dd*cos($deg2rad*$lat0))/2] 80 [expr 180-sqrt(0.5)/($dd*cos($deg2rad*$lat0))/2] 225 "B 1 km SW of A, across +180/-180 line, at lat=80"
